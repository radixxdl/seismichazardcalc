<cruisecontrol>
	<!-- Commonly used directories -->
	<property name="projectdir" value="/scratch/opensha/build/trunk"/>
	<property name="tomcatprojectdir" value="/usr/local/tomcat/default/webapps/OpenSHA_dev/WEB-INF"/>
	<property name="tomcatdistdir" value="/usr/local/tomcat/default/webapps/OpenSHA/WEB-INF"/>
	<property name="testdir" value="${projectdir}/junit/logs"/>
	<property name="logdir" value="logs/${project.name}"/>
	<property name="ant.bin" value="/usr/local/ant/default/bin/ant"/>
	
	<property name="returnaddress" value="noreply@opensha.usc.edu"/>

	<!-- This runs based on modifications to the repository. It compiles the code and runs common tests. -->
	<project name="OpenSHA-continuous" buildafterfailed="false" requiremodification="true">
		<listeners>
			<currentbuildstatuslistener
          		file="${logdir}/buildstatus.txt"/>
        </listeners>
	
		<bootstrappers>
			<svnbootstrapper file="ant/cc-build-test.xml"
				localWorkingCopy="${projectdir}" />
			<svnbootstrapper file="ant/build.xml"
				localWorkingCopy="${projectdir}" />
			<svnbootstrapper file="ant/test.xml"
				localWorkingCopy="${projectdir}" />
		</bootstrappers>

		<schedule interval="300">
			<ant uselogger="true" antscript="${ant.bin}"
						buildfile="${projectdir}/ant/cc-build-test.xml"
						target="svn.build.run.common.tests" />
		</schedule>

		<modificationset quietperiod="60">
			<svn LocalWorkingCopy="${projectdir}"/>
		</modificationset>

		<log dir="${logdir}">
			<merge dir="${testdir}" />
			<gzip every="2" unit="WEEK"/>
		</log>

		<publishers>

			<htmlemail mailhost="localhost"
						returnaddress="${returnaddress}"
						reportsuccess="fixes"
						subjectprefix="[CuiseControl]"
						skipusers="true"
						css="/usr/local/cruise/default/reporting/jsp/webcontent/css/cruisecontrol.css"
						xsldir="/usr/local/cruise/default/reporting/jsp/webcontent/xsl"
						logdir="${logdir}">
				<always address="kmilner@usc.edu" />
				<!--<failure address="kmilner@usc.edu" />-->
				<always address="pmpowers@usgs.gov" />
			</htmlemail>

		</publishers>

	</project>

	<!-- This runs every night to build applications -->
	<project name="OpenSHA-nightly" buildafterfailed="false" requiremodification="false">
	
		<listeners>
			<currentbuildstatuslistener
          		file="${logdir}/buildstatus.txt"/>
        </listeners>
	
		<bootstrappers>
			<svnbootstrapper file="ant/cc-build-test.xml"
				localWorkingCopy="${tomcatprojectdir}" />
			<svnbootstrapper file="ant/build.xml"
				localWorkingCopy="${tomcatprojectdir}" />
		</bootstrappers>

		<schedule>
			<!-- This test runs nightly, building nightly jars -->
			<ant uselogger="true" time="0000" antscript="${ant.bin}"
						buildfile="${tomcatprojectdir}/ant/cc-build-test.xml"
						target="svn.update.app.build" />
		</schedule>

		<!-- we shouldn't need this since requiremodification=false, but a CC bug requires it to build -->
		<modificationset quietperiod="60">
			<alwaysbuild/>
		</modificationset>

		<log dir="${logdir}">
			<!-- <merge dir="${testdir}" /> -->
			<gzip every="2" unit="WEEK"/>
		</log>

		<publishers>

			<htmlemail mailhost="localhost"
						returnaddress="${returnaddress}"
						reportsuccess="fixes"
						subjectprefix="[CuiseControl]"
						skipusers="true"
						css="/usr/local/cruise/default/reporting/jsp/webcontent/css/cruisecontrol.css"
						xsldir="/usr/local/cruise/default/reporting/jsp/webcontent/xsl"
						logdir="${logdir}">
				<always address="kmilner@usc.edu" />
				<!--<failure address="kmilner@usc.edu" />-->
				<failure address="pmpowers@usgs.gov" />
			</htmlemail>

		</publishers>

	</project>

	<!-- This test runs hourly, making sure the system is operational -->
	<project name="OpenSHA-operational" buildafterfailed="false" requiremodification="false">
	
		<listeners>
			<currentbuildstatuslistener
          		file="${logdir}/buildstatus.txt"/>
        </listeners>
	
		<!--
		<bootstrappers>
			<svnbootstrapper file="ant/cc-build-test.xml"
				localWorkingCopy="${projectdir}" />
			<svnbootstrapper file="ant/build.xml"
				localWorkingCopy="${projectdir}" />
			<svnbootstrapper file="ant/test.xml"
				localWorkingCopy="${projectdir}" />
		</bootstrappers>
		-->

		<schedule interval="3600">
			<!-- bundle in composite tag to execute both -->
			<composite>
				<!-- This test runs hourly, making sure the system is operational (servlets, DB) -->
				<ant uselogger="true" antscript="${ant.bin}"
							buildfile="${projectdir}/ant/cc-build-test.xml"
							target="run.operational.tests" />
				<!-- Now test released applications making sure the system is operational (servlets, DB) -->
				<ant uselogger="true" antscript="${ant.bin}"
							buildfile="${tomcatdistdir}/ant/cc-build-test.xml"
							target="run.operational.tests" />
			</composite>
		</schedule>

		<!-- we shouldn't need this since requiremodification=false, but a CC bug requires it to build -->
		<modificationset quietperiod="60">
			<alwaysbuild/>
		</modificationset>

		<log dir="${logdir}">
			<merge dir="${testdir}" />
			<gzip every="2" unit="WEEK"/>
		</log>

		<publishers>

			<htmlemail mailhost="localhost"
						returnaddress="${returnaddress}"
						reportsuccess="fixes"
						subjectprefix="[CuiseControl]"
						skipusers="true"
						css="/usr/local/cruise/default/reporting/jsp/webcontent/css/cruisecontrol.css"
						xsldir="/usr/local/cruise/default/reporting/jsp/webcontent/xsl"
						logdir="${logdir}">
				<always address="kmilner@usc.edu" />
				<!--<failure address="kmilner@usc.edu" />
				<failure address="pmpowers@usgs.gov" />-->
			</htmlemail>

		</publishers>

	</project>
	
	<!-- This test runs every night. It creates JavaDocs, runs tests, and updates the Cobertura code coverage -->
	<project name="OpenSHA-JUnitNightlyCoverage" buildafterfailed="false" requiremodification="false">
	
		<listeners>
			<currentbuildstatuslistener
          		file="${logdir}/buildstatus.txt"/>
        </listeners>
	
		<bootstrappers>
			<svnbootstrapper file="ant/cc-build-test.xml"
				localWorkingCopy="${projectdir}" />
			<svnbootstrapper file="ant/build.xml"
				localWorkingCopy="${projectdir}" />
			<svnbootstrapper file="ant/test.xml"
				localWorkingCopy="${projectdir}" />
		</bootstrappers>

		<schedule>
			<!-- This test runs nightly, updating the coverage site with daily tests -->
			<ant uselogger="true" time="0145" antscript="${ant.bin}"
						buildfile="${projectdir}/ant/cc-build-test.xml"
						target="svn.build.run.daily.coverage" />
		</schedule>

		<!-- we shouldn't need this since requiremodification=false, but a CC bug requires it to build -->
		<modificationset quietperiod="60">
			<alwaysbuild/>
		</modificationset>

		<log dir="${logdir}">
			<merge dir="${testdir}" />
			<gzip every="2" unit="WEEK"/>
		</log>

		<publishers>

			<htmlemail mailhost="localhost"
						returnaddress="${returnaddress}"
						reportsuccess="fixes"
						subjectprefix="[CuiseControl]"
						skipusers="true"
						css="/usr/local/cruise/default/reporting/jsp/webcontent/css/cruisecontrol.css"
						xsldir="/usr/local/cruise/default/reporting/jsp/webcontent/xsl"
						logdir="${logdir}">
				<always address="kmilner@usc.edu" />
				<!--<failure address="kmilner@usc.edu" />-->
				<failure address="pmpowers@usgs.gov" />
			</htmlemail>

		</publishers>

	</project>
	
	<!-- This test runs every night to update the "Preffered Data" in the fault database. -->
	<project name="OpenSHA-FaultDBPrefData" buildafterfailed="false" requiremodification="false">
	
		<listeners>
			<currentbuildstatuslistener
          		file="${logdir}/buildstatus.txt"/>
        </listeners>
	
		<!--
		<bootstrappers>
			<svnbootstrapper file="ant/cc-build-test.xml"
				localWorkingCopy="${tomcatprojectdir}" />
			<svnbootstrapper file="ant/build.xml"
				localWorkingCopy="${tomcatprojectdir}" />
		</bootstrappers>
		-->

		<schedule>
			<!-- This test runs nightly, updating pref data at 1 am, with a timeout
					of 20 minutes (1200 seconds)  -->
			<ant uselogger="true" time="0100" antscript="${ant.bin}" timeout="1200"
						buildfile="${tomcatprojectdir}/ant/cc-build-test.xml"
						target="pref.fault.data.update" />
		</schedule>

		<!-- we shouldn't need this since requiremodification=false, but a CC bug requires it to build -->
		<modificationset quietperiod="60">
			<alwaysbuild/>
		</modificationset>

		<log dir="${logdir}">
			<merge dir="${testdir}" />
			<gzip every="2" unit="WEEK"/>
		</log>

		<publishers>

			<htmlemail mailhost="localhost"
						returnaddress="${returnaddress}"
						reportsuccess="fixes"
						subjectprefix="[CuiseControl]"
						skipusers="true"
						css="/usr/local/cruise/default/reporting/jsp/webcontent/css/cruisecontrol.css"
						xsldir="/usr/local/cruise/default/reporting/jsp/webcontent/xsl"
						logdir="${logdir}">
				<always address="kmilner@usc.edu" />
				<!--<failure address="kmilner@usc.edu" />
				<failure address="pmpowers@usgs.gov" />-->
			</htmlemail>

		</publishers>

	</project>
	
	<!-- This runs every night to build applications -->
	<project name="OpenSHA-DistManualAppBuild" buildafterfailed="false" forceOnly="true" forceBuildNewProject="false">
	
		<listeners>
			<currentbuildstatuslistener
          		file="${logdir}/buildstatus.txt"/>
        </listeners>
	
		<bootstrappers>
			<svnbootstrapper file="ant/cc-build-test.xml"
				localWorkingCopy="${tomcatdistdir}" />
			<svnbootstrapper file="ant/build.xml"
				localWorkingCopy="${tomcatdistdir}" />
		</bootstrappers>

		<schedule>
			<!-- This test runs nightly, building nightly jars -->
			<ant uselogger="true" time="0300" antscript="${ant.bin}"
						buildfile="${tomcatdistdir}/ant/cc-build-test.xml"
						target="svn.update.app.dist.build" />
		</schedule>

		<!-- we shouldn't need this since requiremodification=false, but a CC bug requires it to build -->
		<modificationset quietperiod="60">
			<alwaysbuild/>
		</modificationset>

		<log dir="${logdir}">
			<!-- <merge dir="${testdir}" /> -->
			<gzip every="2" unit="WEEK"/>
		</log>

		<publishers>

			<htmlemail mailhost="localhost"
						returnaddress="${returnaddress}"
						reportsuccess="always"
						subjectprefix="[CuiseControl]"
						skipusers="true"
						css="/usr/local/cruise/default/reporting/jsp/webcontent/css/cruisecontrol.css"
						xsldir="/usr/local/cruise/default/reporting/jsp/webcontent/xsl"
						logdir="${logdir}">
				<always address="kmilner@usc.edu" />
				<!--<failure address="kmilner@usc.edu" />-->
				<failure address="pmpowers@usgs.gov" />
			</htmlemail>

		</publishers>

	</project>
</cruisecontrol>
